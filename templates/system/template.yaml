apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-system-with-namespace
  title: Create Backstage System with Kubernetes Namespace
  description: Creates a new Backstage System entity and Kubernetes Namespace by opening a PR in your GitOps repo.
spec:
  owner: group:default/your-group
  type: service
  parameters:
    title: System Information
    type: object
    required:
      - name
      - description
      - owner
    properties:
      name:
        type: string
        title: System Name
        description: Unique system name (lowercase, no spaces)
      description:
        type: string
        title: System Description
      owner:
        type: string
        title: Owner (Backstage user or group)

  steps:
    - id: generate-files
      name: Generate Manifests
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}

    - id: create-pr
      name: Create PR in platform-infra repo
      action: publish:github:pull-request
      input:
        repoUrl: github.com?owner=vercevo&repo=platform-infra
        branchName: backstage/add-system-${{ parameters.name }}
        defaultBranch: main
        title: Add new system and namespace for ${{ parameters.name }}
        body: This PR adds namespace and system manifests for ${{ parameters.name }}
        description: |
          This PR was generated by the Backstage Scaffolder template `create-system-with-namespace`.
          It includes the following changes:
          - A Kubernetes Namespace manifest for ${{ parameters.name }}
          - A Backstage System entity manifest for ${{ parameters.name }}
    - id: register-system
      name: Register Backstage System
      action: catalog:register
      input:
        catalogInfo:
          apiVersion: backstage.io/v1alpha1
          kind: System
          metadata:
            name: ${{ parameters.name }}
            description: ${{ parameters.description }}
          spec:
            owner: ${{ parameters.owner }}
            lifecycle: production
