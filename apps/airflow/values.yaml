airflow:
  airflow:
    image:
      repository: apache/airflow
      tag: "2.9.3" # or latest stable 2.9.x
    executor: "KubernetesExecutor"
    config:
      AIRFLOW__WEBSERVER__BASE_URL: "https://airflow.bergtobias.com"
      AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX: "True"
      AIRFLOW__KUBERNETES__NAMESPACE: "airflow"
      AIRFLOW__KUBERNETES__DELETE_WORKER_PODS: "True"
      AIRFLOW__KUBERNETES__DELETE_WORKER_PODS_ON_FAILURE: "True"
      AIRFLOW__KUBERNETES__DAGS_IN_IMAGE: "False" # since you use gitSync

    extraEnv:
      - name: GITHUB_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: github-airflow-oauth
            key: client-id
      - name: GITHUB_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: github-airflow-oauth
            key: client-secret

  dags:
    gitSync:
      enabled: true
      repo: https://github.com/vercevo/dags
      branch: main
      rev: HEAD
      depth: 1
      subPath: ""
      wait: 60

  web:
    replicas: 1
    webserverConfig:
      enabled: true
      stringOverride: |-
        from airflow.providers.fab.auth_manager.security_manager.override import FabAirflowSecurityManagerOverride
        from flask_appbuilder.security.manager import AUTH_OAUTH
        import os

        log = logging.getLogger(__name__)
        log.setLevel(os.getenv("AIRFLOW__LOGGING__FAB_LOGGING_LEVEL", "INFO"))


        AUTH_TYPE = AUTH_OAUTH
        AUTH_ROLES_SYNC_AT_LOGIN = True  # Checks roles on every login
        AUTH_USER_REGISTRATION = True  # allow users who are not already in the FAB DB to register

        AUTH_ROLES_MAPPING = {
            "Viewer": ["Viewer"],
            "Admin": ["Admin"],
        }
        # If you wish, you can add multiple OAuth providers.
        OAUTH_PROVIDERS = [
            {
                "name": "github",
                "icon": "fa-github",
                "token_key": "access_token",
                "remote_app": {
                    "client_id": os.getenv("GITHUB_CLIENT_ID"),
                    "client_secret": os.getenv("GITHUB_CLIENT_SECRET"),
                    "api_base_url": "https://api.github.com",
                    "client_kwargs": {"scope": "read:user, read:org"},
                    "access_token_url": "https://github.com/login/oauth/access_token",
                    "authorize_url": "https://github.com/login/oauth/authorize",
                    "request_token_url": None,
                },
            },
        ]


        class CustomSecurityManager(FabAirflowSecurityManagerOverride):
            pass


        # Make sure to replace this with your own implementation of AirflowSecurityManager class
        SECURITY_MANAGER_CLASS = CustomSecurityManager

  redis:
    ## if the `stable/redis` chart is used
    enabled: false
  flower:
    ## if the airflow flower UI should be deployed
    enabled: false
  workers:
    ## if the airflow workers StatefulSet should be deployed
    enabled: false
